<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.1.xsd">

	<job id="jobSimple" xmlns="http://www.springframework.org/schema/batch">
		<step id="stepSimple">
			<tasklet>
				<chunk reader="reader" writer="writer" commit-interval="10">
				</chunk>
			</tasklet>
		</step>
	</job>
	
	<job id="jobParallel" xmlns="http://www.springframework.org/schema/batch">
		<step id="stepParallel">
			<tasklet task-executor="taskExecutor" throttle-limit="2">
				<chunk reader="reader" writer="writer" commit-interval="10">
				</chunk>
			</tasklet>
		</step>
	</job>
	
	<bean id="taskExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="2" />
		<property name="maxPoolSize" value="2" />
	</bean>

	<bean id="reader" class="org.springframework.batch.item.database.JdbcPagingItemReader" scope="step">
	    <property name="dataSource" ref="dataSource"/>
	    <property name="queryProvider">
	        <bean class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
	        	<property name="dataSource" ref="dataSource" />
	            <property name="selectClause" value="select id,name,description,price"/>
	            <property name="fromClause" value="from staging_product"/>
	            <property name="whereClause" value="where processed = ?" />
	            <property name="sortKey" value="id"/>	        
	        </bean>
	    </property>    
	    <property name="pageSize" value="10"/>
		<property name="parameterValues">
			<map>
				<entry key="1" value="false" />
			</map>
		</property>
	    <property name="rowMapper">
	    	<bean class="com.manning.sbia.sandbox.parallel.ProductRowMapper" />
	    </property>
	    <property name="saveState" value="false" />
	</bean>
	
	<bean id="writer" class="com.manning.sbia.sandbox.parallel.StagingProductItemWriter">
		<constructor-arg ref="dataSource" />
	</bean>
	
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<batch:job-repository />

	<bean id="jobLauncher" class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:sbia_sandbox_parallel;DB_CLOSE_DELAY=-1" />
		<property name="username" value="sa" />
		<property name="password" value="" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="5" />
	</bean>

	<jdbc:initialize-database data-source="dataSource">
		<jdbc:script location="classpath:/org/springframework/batch/core/schema-h2.sql"/>
		<jdbc:script location="classpath:/create-tables.sql" />
		<jdbc:script location="classpath:/com/manning/sbia/sandbox/parallel/create-staging-tables.sql"/>
	</jdbc:initialize-database>
	
	<bean class="org.springframework.jdbc.core.JdbcTemplate">
		<constructor-arg ref="dataSource" />
	</bean>

</beans>
